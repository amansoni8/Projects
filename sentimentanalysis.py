# -*- coding: utf-8 -*-
"""SentimentAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ciQlM0xxUqA6CIGOPGX3T5laiWlcn-KW
"""

import re
import pandas as pd

f = open('WhatsApp Chat with IT 2019-23 Batch.txt','r',encoding='utf-8')

data = f.read()

print(data)

pattern = '\d{1,2}/\d{1,2}/\d{2,4},\s\d{1,2}:\d{2}\s-\s'

messages = re.split(pattern, data)[1:]
messages

dates = re.findall(pattern, data)
dates

df = pd.DataFrame({'user_message':messages, 'message_date': dates})
#convert message_date type
df['message_date'] = pd.to_datetime(df['message_date'], format='%m/%d/%y, %H:%M - ')

df.rename(columns={'message_date': 'date'}, inplace=True)

df.head()

df.shape

# separate users and messages

users = []
messages = []
for message in df['user_message']:
    entry = re.split(' ([\w\W]+?):\s', message)
    if entry[1:]:# user name users.append(entry[1])
        users.append(entry[1])
        messages.append(entry [2])
    else:
        users.append('group_notification')
        messages.append(entry[0])

df['user'] = users
df['message'] = messages

df.drop(columns=['user_message'], inplace=True)

df.head()

import nltk
nltk.download('vader_lexicon')
from nltk.sentiment.vader import SentimentIntensityAnalyzer

data = df.dropna()
sentiments = SentimentIntensityAnalyzer()
data["Positive"] = [sentiments.polarity_scores(i)["pos"] for i in data["message"]]
data["Negative"] = [sentiments.polarity_scores(i)["neg"] for i in data["message"]]
data["Neutral"] = [sentiments.polarity_scores(i)["neu"] for i in data["message"]]
print(data)

x = sum(data["Positive"])
y = sum(data["Negative"])
z = sum(data["Neutral"])

def sentiment_score(a, b, c):
    if (a>b) and (a>c):
        print("Positive ğŸ˜Š ")
    elif (b>a) and (b>c):
        print("Negative ğŸ˜  ")
    else:
        print("Neutral ğŸ™‚ ")
sentiment_score(x, y, z)